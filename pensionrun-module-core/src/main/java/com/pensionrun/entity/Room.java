package com.pensionrun.entity;
// Generated 2016. 4. 27 오전 12:18:51 by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Room generated by hbm2java
 */
@Entity
@Table(name = "room", catalog = "PensionRun")
public class Room implements java.io.Serializable {

	private Integer idfRoom;
	private Pension pension;
	private String idfProvider;
	private String idfProviderRoom;
	private String name;
	private Byte size;
	private Byte priority;
	private Byte peopleMin;
	private Byte peopleMax;
	private Character structureType;
	private String description;
	private String descriptionStyle;
	private Byte roomCount;
	private Byte bathroomCount;
	private Character state;
	private Date regDate;
	private Set<RoomPrice> roomPrices = new HashSet<RoomPrice>(0);
	private Set<RoomAmenity> roomAmenities = new HashSet<RoomAmenity>(0);
	private Set<RoomImage> roomImages = new HashSet<RoomImage>(0);
	private Set<Order> orders = new HashSet<Order>(0);
	
	public Room() {
	}

	public Room(Pension pension, Date regDate) {
		this.pension = pension;
		this.regDate = regDate;
	}

	public Room(Pension pension, String idfProvider, String idfProviderRoom, String name, Byte size, Byte priority,
			Byte peopleMin, Byte peopleMax, Character structureType, String description, String descriptionStyle,
			Byte roomCount, Byte bathroomCount, Character state, Date regDate, Set<RoomPrice> roomPrices,
			Set<RoomAmenity> roomAmenities, Set<RoomImage> roomImages, Set<Order> orders) {
		this.pension = pension;
		this.idfProvider = idfProvider;
		this.idfProviderRoom = idfProviderRoom;
		this.name = name;
		this.size = size;
		this.priority = priority;
		this.peopleMin = peopleMin;
		this.peopleMax = peopleMax;
		this.structureType = structureType;
		this.description = description;
		this.descriptionStyle = descriptionStyle;
		this.roomCount = roomCount;
		this.bathroomCount = bathroomCount;
		this.state = state;
		this.regDate = regDate;
		this.roomPrices = roomPrices;
		this.roomAmenities = roomAmenities;
		this.roomImages = roomImages;
		this.orders = orders;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "idf_room", unique = true, nullable = false)
	public Integer getIdfRoom() {
		return this.idfRoom;
	}

	public void setIdfRoom(Integer idfRoom) {
		this.idfRoom = idfRoom;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idf_pension", nullable = false)
	public Pension getPension() {
		return this.pension;
	}

	public void setPension(Pension pension) {
		this.pension = pension;
	}

	@Column(name = "idf_provider", length = 8)
	public String getIdfProvider() {
		return this.idfProvider;
	}

	public void setIdfProvider(String idfProvider) {
		this.idfProvider = idfProvider;
	}

	@Column(name = "idf_provider_room", length = 3)
	public String getIdfProviderRoom() {
		return this.idfProviderRoom;
	}

	public void setIdfProviderRoom(String idfProviderRoom) {
		this.idfProviderRoom = idfProviderRoom;
	}

	@Column(name = "name", length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "size")
	public Byte getSize() {
		return this.size;
	}

	public void setSize(Byte size) {
		this.size = size;
	}

	@Column(name = "priority")
	public Byte getPriority() {
		return this.priority;
	}

	public void setPriority(Byte priority) {
		this.priority = priority;
	}

	@Column(name = "people_min")
	public Byte getPeopleMin() {
		return this.peopleMin;
	}

	public void setPeopleMin(Byte peopleMin) {
		this.peopleMin = peopleMin;
	}

	@Column(name = "people_max")
	public Byte getPeopleMax() {
		return this.peopleMax;
	}

	public void setPeopleMax(Byte peopleMax) {
		this.peopleMax = peopleMax;
	}

	@Column(name = "structure_type", length = 1)
	public Character getStructureType() {
		return this.structureType;
	}

	public void setStructureType(Character structureType) {
		this.structureType = structureType;
	}

	@Column(name = "description", length = 65535)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "description_style", length = 300)
	public String getDescriptionStyle() {
		return this.descriptionStyle;
	}

	public void setDescriptionStyle(String descriptionStyle) {
		this.descriptionStyle = descriptionStyle;
	}

	@Column(name = "room_count")
	public Byte getRoomCount() {
		return this.roomCount;
	}

	public void setRoomCount(Byte roomCount) {
		this.roomCount = roomCount;
	}

	@Column(name = "bathroom_count")
	public Byte getBathroomCount() {
		return this.bathroomCount;
	}

	public void setBathroomCount(Byte bathroomCount) {
		this.bathroomCount = bathroomCount;
	}

	@Column(name = "state", length = 1)
	public Character getState() {
		return this.state;
	}

	public void setState(Character state) {
		this.state = state;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "reg_date", nullable = false, length = 19, insertable=false, updatable=false)
	public Date getRegDate() {
		return this.regDate;
	}

	public void setRegDate(Date regDate) {
		this.regDate = regDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "room")
	public Set<RoomPrice> getRoomPrices() {
		return this.roomPrices;
	}

	public void setRoomPrices(Set<RoomPrice> roomPrices) {
		this.roomPrices = roomPrices;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "room")
	public Set<RoomAmenity> getRoomAmenities() {
		return this.roomAmenities;
	}

	public void setRoomAmenities(Set<RoomAmenity> roomAmenities) {
		this.roomAmenities = roomAmenities;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "room")
	public Set<RoomImage> getRoomImages() {
		return this.roomImages;
	}

	public void setRoomImages(Set<RoomImage> roomImages) {
		this.roomImages = roomImages;
	}
	

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "room")
	public Set<Order> getOrders() {
		return orders;
	}

	public void setOrders(Set<Order> orders) {
		this.orders = orders;
	}
	

}
