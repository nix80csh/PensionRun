package com.pensionrun.entity;
// Generated 2016. 5. 27 오전 10:36:21 by Hibernate Tools 4.3.1.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Payment generated by hbm2java
 */
@Entity
@Table(name = "payment", catalog = "PensionRun")
public class Payment implements java.io.Serializable {

	private String idfPayment;
	private Order order;
	private String type;
	private float amount;
	private String resultCode;
	private String resultMessage;
	private Date regDate;
	private PaymentCancelVbank paymentCancelVbank;
	private PaymentCancelCard paymentCancelCard;
	private PaymentCard paymentCard;
	private PaymentVbank paymentVbank;

	public Payment() {
		
	}

	public Payment(String idfPayment, Order order, String type, float amount, String resultCode, String resultMessage,
			Date regDate) {
		this.idfPayment = idfPayment;
		this.order = order;
		this.type = type;
		this.amount = amount;
		this.resultCode = resultCode;
		this.resultMessage = resultMessage;
		this.regDate = regDate;
	}

	public Payment(String idfPayment, Order order, String type, float amount, String resultCode, String resultMessage,
			Date regDate, PaymentCancelVbank paymentCancelVbank, PaymentCancelCard paymentCancelCard,
			PaymentCard paymentCard, PaymentVbank paymentVbank) {
		this.idfPayment = idfPayment;
		this.order = order;
		this.type = type;
		this.amount = amount;
		this.resultCode = resultCode;
		this.resultMessage = resultMessage;
		this.regDate = regDate;
		this.paymentCancelVbank = paymentCancelVbank;
		this.paymentCancelCard = paymentCancelCard;
		this.paymentCard = paymentCard;
		this.paymentVbank = paymentVbank;
	}

	@Id

	@Column(name = "idf_payment", unique = true, nullable = false, length = 30)
	public String getIdfPayment() {
		return this.idfPayment;
	}

	public void setIdfPayment(String idfPayment) {
		this.idfPayment = idfPayment;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idf_order", nullable = false)
	public Order getOrder() {
		return this.order;
	}

	public void setOrder(Order order) {
		this.order = order;
	}

	@Column(name = "type", nullable = false, length = 10)
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@Column(name = "amount", nullable = false, precision = 12, scale = 0)
	public float getAmount() {
		return this.amount;
	}

	public void setAmount(float amount) {
		this.amount = amount;
	}

	@Column(name = "result_code", nullable = false, length = 4)
	public String getResultCode() {
		return this.resultCode;
	}

	public void setResultCode(String resultCode) {
		this.resultCode = resultCode;
	}

	@Column(name = "result_message", nullable = false, length = 45)
	public String getResultMessage() {
		return this.resultMessage;
	}

	public void setResultMessage(String resultMessage) {
		this.resultMessage = resultMessage;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "reg_date", nullable = false, length = 19, insertable=false, updatable=false)
	public Date getRegDate() {
		return this.regDate;
	}

	public void setRegDate(Date regDate) {
		this.regDate = regDate;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "payment")
	public PaymentCancelVbank getPaymentCancelVbank() {
		return this.paymentCancelVbank;
	}

	public void setPaymentCancelVbank(PaymentCancelVbank paymentCancelVbank) {
		this.paymentCancelVbank = paymentCancelVbank;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "payment")
	public PaymentCancelCard getPaymentCancelCard() {
		return this.paymentCancelCard;
	}

	public void setPaymentCancelCard(PaymentCancelCard paymentCancelCard) {
		this.paymentCancelCard = paymentCancelCard;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "payment")
	public PaymentCard getPaymentCard() {
		return this.paymentCard;
	}

	public void setPaymentCard(PaymentCard paymentCard) {
		this.paymentCard = paymentCard;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "payment")
	public PaymentVbank getPaymentVbank() {
		return this.paymentVbank;
	}

	public void setPaymentVbank(PaymentVbank paymentVbank) {
		this.paymentVbank = paymentVbank;
	}

}
