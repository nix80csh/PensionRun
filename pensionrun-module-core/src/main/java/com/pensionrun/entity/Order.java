package com.pensionrun.entity;
// Generated 2016. 5. 27 오전 10:36:21 by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.pensionrun.entity.Account;
import com.pensionrun.entity.Room;

/**
 * Order generated by hbm2java
 */
@Entity
@Table(name = "order", catalog = "PensionRun")
public class Order implements java.io.Serializable {

	private Integer idfOrder;
	private Account account;
	private Room room;
	private String name;
	private String mobile;
	private String email;
	private char state;
	private byte peopleCount;
	private float amount;
	private String checkinDate;
	private String checkoutDate;
	private String reservationCode;
	private Date regDate;
	
	private Set<Payment> payments = new HashSet<Payment>(0);

	public Order() {
	}

	public Order(Account account, Room room, String name, String mobile, String email, char state, byte peopleCount,
			float amount, String checkinDate, String checkoutDate, Date regDate) {
		this.account = account;
		this.room = room;
		this.name = name;
		this.mobile = mobile;
		this.email = email;
		this.state = state;
		this.peopleCount = peopleCount;
		this.amount = amount;
		this.checkinDate = checkinDate;
		this.checkoutDate = checkoutDate;
		this.regDate = regDate;
	}

	public Order(Account account, Room room, String name, String mobile, String email, char state, byte peopleCount,
			float amount, String checkinDate, String checkoutDate, Date regDate, Set<Payment> payments) {
		this.account = account;
		this.room = room;
		this.name = name;
		this.mobile = mobile;
		this.email = email;
		this.state = state;
		this.peopleCount = peopleCount;
		this.amount = amount;
		this.checkinDate = checkinDate;
		this.checkoutDate = checkoutDate;
		this.regDate = regDate;
		this.payments = payments;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idf_order", unique = true, nullable = false)
	public Integer getIdfOrder() {
		return this.idfOrder;
	}

	public void setIdfOrder(Integer idfOrder) {
		this.idfOrder = idfOrder;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idf_account", nullable = false)
	public Account getAccount() {
		return this.account;
	}

	public void setAccount(Account account) {
		this.account = account;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idf_room", nullable = false)
	public Room getRoom() {
		return this.room;
	}

	public void setRoom(Room room) {
		this.room = room;
	}

	@Column(name = "name", nullable = false, length = 20)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "mobile", nullable = false, length = 13)
	public String getMobile() {
		return this.mobile;
	}

	public void setMobile(String mobile) {
		this.mobile = mobile;
	}

	@Column(name = "email", nullable = false, length = 30)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "state", nullable = false, length = 1)
	public char getState() {
		return this.state;
	}

	public void setState(char state) {
		this.state = state;
	}

	@Column(name = "people_count", nullable = false)
	public byte getPeopleCount() {
		return this.peopleCount;
	}

	public void setPeopleCount(byte peopleCount) {
		this.peopleCount = peopleCount;
	}

	@Column(name = "amount", nullable = false, precision = 12, scale = 0)
	public float getAmount() {
		return this.amount;
	}

	public void setAmount(float amount) {
		this.amount = amount;
	}

	@Column(name = "checkin_date", nullable = false, length = 10)
	public String getCheckinDate() {
		return this.checkinDate;
	}

	public void setCheckinDate(String checkinDate) {
		this.checkinDate = checkinDate;
	}

	@Column(name = "checkout_date", nullable = false, length = 10)
	public String getCheckoutDate() {
		return this.checkoutDate;
	}

	public void setCheckoutDate(String checkoutDate) {
		this.checkoutDate = checkoutDate;
	}


	@Column(name = "reservation_code", length = 20, unique = true)
	public String getReservationCode() {
		return reservationCode;
	}

	public void setReservationCode(String reservationCode) {
		this.reservationCode = reservationCode;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "reg_date", nullable = false, length = 19, insertable=false, updatable=false)
	public Date getRegDate() {
		return this.regDate;
	}

	public void setRegDate(Date regDate) {
		this.regDate = regDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "order")
	public Set<Payment> getPayments() {
		return this.payments;
	}

	public void setPayments(Set<Payment> payments) {
		this.payments = payments;
	}

	@Override
	public String toString() {
		return "Order [idfOrder=" + idfOrder + ", account=" + account + ", room=" + room + ", name=" + name
				+ ", mobile=" + mobile + ", email=" + email + ", state=" + state + ", peopleCount=" + peopleCount
				+ ", amount=" + amount + ", checkinDate=" + checkinDate + ", checkoutDate=" + checkoutDate
				+ ", reservationCode=" + reservationCode + ", regDate=" + regDate + ", payments=" + payments + "]";
	}



}
